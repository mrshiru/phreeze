<?php
/**
 * AccountDAO provides object-oriented access to the  table.  This
 * class is automatically generated by ClassBuilder.
 *
 * This file should generally not be edited by hand except in special circumstances.
 * Add any custom business logic to the Model class which is extended from this DAO class.
 *
 * @package    Model::DAO
 * @author ClassBuilder
 * @version 1.0
 */

require_once("verysimple/Phreeze/Phreezable.php");
require_once("AccountMap.php");

class AccountDAO extends Phreezable
{
	public $Id;
	public $Status;
	public $RoleId;
	public $FirstName;
	public $LastName;
	public $Username;
	public $Password;
	public $Homepage;
	public $Company;
	public $Address1;
	public $City;
	public $State;
	public $Zip;
	public $Phone;
	public $Fax;
	public $Email;
	public $TaxId;
	public $TaxFile;
	public $Created;
	public $Modified;

	public function GetCommentsAssignedFrom($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "comments_assigned_from_account", $criteria);
	}

	public function GetCommentsAssignedTo($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "comments_assigned_to_account", $criteria);
	}

	public function GetCommentsCreatedBy($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "comments_created_by_account", $criteria);
	}

	public function GetTicketsAssignedTo($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "tickets_assigned_to_account", $criteria);
	}

	public function GetTicketsSubmittedBy($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "tickets_submitted_by_account", $criteria);
	}

	public function GetUnits($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "units_account", $criteria);
	}

	public function GetRole($criteria = null)
	{
		return $this->_phreezer->GetManyToOne($this, "accounts_role");
	}


}
?>